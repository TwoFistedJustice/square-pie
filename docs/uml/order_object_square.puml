@startuml
'https://plantuml.com/class-diagram

/'dot.syntax for grouping does NOT work with "object" so use "class" instead'/


namespace endpoint  {
.Create <|-- .Square_Order_Object
}

namespace source {
.source --o .Square_Order_Object
}


namespace discount {
.discounts --o .Square_Order_Object

state --o .discounts
.scope --o .discounts
.type  --o .discounts

enum state {
+ OPEN
+ COMPLETED
+ CANCELED
+ DRAFT
}
}

namespace line_items {
.line_item --o .Square_Order_Object

.quantity_unit --o .line_item
.applied_discounts --o .line_item
.modifiers --o .line_item
.applied_discounts --o .line_item
.applied_taxes --o .line_item
.pricing_blocklists --o .line_item
.item_type --o .line_item
}

namespace fulfillment {
.fulfillment --o .Square_Order_Object

.schedule_type --o .fulfillment
.type --o .fulfillment
.state --o .fulfillment
.recipient --o .fulfillment
.shipment_details --o .fulfillment
.curbside_pickup_details --o .fulfillment
.pickup_details --o .fulfillment
}

interface Create {
+ method: POST
+ URL:  /v2/orders
+ idempotency_key
}

class Square_Order_Object {
+ version : number, - only used for updates
+ id: string : 191,
+ location_id : string, // required
+ reference_id : string, // backend ID or this order
+ customer_id : string: 191
+ ticket_name : string- this is persisted and gets displayed on any printouts
+ state: FIXED,
+ source: OBJECT -- set automatically to location id and leave an option to change it
+ pricing_options : OBJECT
+ service_charges : ARRAY of OBJECTS
+ discounts : ARRAY of OBJECTS
+ taxes : ARRAY of OBJECTS
+ fulfillments : ARRAY of OBJECTS
+ line_items : ARRAY of OBJECTS
}

class discounts <<{, cyan)>> {
+ uid
+ name
+ amount_money:  ARCHETYPE : money
+ applied_money:  ARCHETYPE : money
+ catalog_object_id
+ catalog_version
+ metadata
+ percentage
+ scope: FIXED
+ type: FIXED
}


enum scope {
+ OTHER_DISCOUNT_SCOPE
+ LINE_ITEM
+ ORDER
}
enum type <<{, cyan)>> {
+ FIXED_PERCENTAGE : !catalog_object_id = REQUIRED
+ FIXED_AMOUNT : !catalog_object_id = REQUIRED
+ LINE_ITEM
+ VARIABLE_PERCENTAGE
+ VARIABLE_AMOUNT
}


class fulfillment <<{, cyan)>> {
+ uid: string : 60
+ state : FIXED
+ pickup_details : OBJECT
+ shipment_details : OBJECT
+ metadata: MAP

}
class line_item <<{, cyan)>> {
+ quantity : string : 1 - 12 : REQUIRED
+ name: string : 512
+ note: string : 2000
+ uid: string : 60
+ variation_name : string : 400
+ catalog_object_id : string : 192
+ catalog_version : integer
+ item_type : FIXED
+ base_price_money: ARCHETYPE : money
+ gross_sales_money: ARCHETYPE : money
+ applied_discounts: ARRAY of OBJECTS
+ applied_taxes: ARRAY of OBJECTS
+ modifiers: ARRAY of OBJECTS
+ pricing_blocklists: ARRAY of OBJECTS
+ quantity_unit: ARRAY of OBJECTS
+ metadata: MAP
}


class quantity_unit <<{, cyan)>> {
+ catalog_object_id: string : 192
+ catalog_version : integer-64
+ measurement_unit: ARCHETYPE: MeasurementUnit
+ precision : integer-32
}
class modifiers <<{, cyan)>> {
+ base_price_money : ARCHETYPE : Money
+ catalog_object_id: string : 192
+ catalog_version : integer-64
+ name : string : 255
+ uid: string : 60
}

class applied_discounts <<{, cyan)>> {
BETA
}

class applied_taxes <<{, cyan)>> {
BETA
}

class pricing_blocklists <<{, cyan)>> {
BETA
}

enum item_type {
+ ITEM
+ CUSTOM_AMOUNT
+ GIFT_CARD
}

class source <<{, cyan)>> {
+ name
}

class pickup_details <<{, cyan)>> {
+ is_curbside_pickup : boolean
+ cancel_reason : string : 100
+ schedule_type: FIXED
+ note : str : 500
+ curbside_pickup_details : OBJECT
+ recipient: OBJECT
+ auto_complete_duration : time RFC 3339
+ pickup_window_duration : time RFC 3339
+ prep_time_duration : time RFC 3339
+ expires_at : time RFC 3339
+ pickup_at : time RFC 3339
}

class curbside_pickup_details <<{, cyan)>> {
+ curbside_details : string : 250
+ buyer_arrived_at : time RFC 3339
}

class shipment_details <<{, cyan)>> {
+ uid : string : 60
+ cancel_reason : string : 100
+ failure_reason : string : 100
+ tracking_number : string : 100
+ shipping_note : string : 500
+ carrier : string : 50
+ shipping_type : string : 50
+ tracking_url : string : 2000
+ expected_shipped_at :
+ recipient : OBJECT
+ state: FIXED
+ type: FIXED
}

class recipient <<{, cyan)>> {
+ customer_id : string : 191
+ display_name : string : 255
+ email_address : string : 255
+ phone_number : string : 17
+ address :  ARCHETYPE : address
}

'fulfillment state
enum state  {
+ PROPOSED
+ RESERVED
+ PREPARED
+ COMPLETED
+ CANCELED
+ FAILED
}

enum type {
+ PICKUP
+ SHIPMENT
}

enum schedule_type {
+ SCHEDULED - default
+ ASAP
}

@enduml